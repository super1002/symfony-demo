# Check documentation at https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
name: Tests

on:
  pull_request: ~
  schedule:
    - cron: '0 2 * * *'
  push:
    branches:
      - master

jobs:
  security-check:
    name: Security Checker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v1
        with:
          php-version: 7.4
          extensions: curl, dom, iconv, intl, json, libxml, mbstring, phar, tokenizer, xdebug, xml, xmlwriter

      - name: Get Composer Cache Directory
        id: composer-cache
        working-directory: api
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        working-directory: api
        run: composer install --prefer-dist --no-progress --no-suggest --no-interaction

      - name: Security check
        working-directory: api
        run: bin/console security:check

  doctrine-schema-validator:
    name: Doctrine Schema Validator
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v1
        with:
          php-version: 7.4
          extensions: curl, dom, iconv, intl, json, libxml, mbstring, phar, tokenizer, xdebug, xml, xmlwriter

      - name: Get Composer Cache Directory
        id: composer-cache
        working-directory: api
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        working-directory: api
        run: composer install --prefer-dist --no-progress --no-suggest --no-interaction

      - name: Doctrine schema validator
        working-directory: api
        run: bin/console doctrine:schema:validate --skip-sync

  phpunit:
    name: PHPUnit
    runs-on: ubuntu-latest
    env:
      COMPOSE_INTERACTIVE_NO_CLI: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build the Docker Compose stack
        run: |-
          docker-compose pull --ignore-pull-failures
          docker-compose build --pull
          docker-compose run php composer install -o -n
          docker-compose up -d

      - name: PHPUnit
        run: |-
          docker-compose exec -T php bin/console doctrine:schema:drop --env=test --force
          docker-compose exec -T php bin/console doctrine:schema:create --env=test
          docker-compose exec -T php bin/console messenger:setup-transports --env=test
          docker-compose exec -T php bin/console cache:warmup --env=test
          docker-compose exec -T php bin/phpunit tests/BooksTest.php
          docker-compose exec -T php bin/phpunit tests/ReviewsTest.php

  jest:
    name: Jest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2-beta

      - name: Install dependencies
        working-directory: client
        run: yarn install --pure-lockfile

      - name: Jest
        working-directory: client
        run: yarn jest --ci --reporters=default --reporters=jest-junit --passWithNoTests

  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2-beta

      - name: Install dependencies
        working-directory: client
        run: yarn install --pure-lockfile

      - name: ESLint
        working-directory: client
        run: yarn eslint src

  helm-lint:
    name: Helm Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Lint Helm
        run: helm lint ./api/helm/api/
