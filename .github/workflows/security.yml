# Check documentation at https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
name: Security

on:
  schedule:
    - cron: 0 0 * * *
  workflow_dispatch: ~

# In order to use this GitHub Actions file, please define the following secrets:
#  - GKE_PROJECT: Project id of the Google Kubernetes Engine
#  - GKE_SA_KEY: Service Account Key of the Google Kubernetes Engine
env:
  GKE_CLUSTER: api-platform-demo
  GCE_ZONE: europe-west1-c
  CONTAINER_REGISTRY_BASE: eu.gcr.io/${{ secrets.GKE_PROJECT }}

jobs:
  security:
    name: ${{ matrix.label }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        stage:
          - php
          - caddy
          - pwa
        include:
          - stage: php
            label: PHP
            context: ./api
            target: api_platform_php
          - stage: caddy
            label: Caddy
            context: ./api
            target: api_platform_caddy
          - stage: pwa
            label: PWA
            context: ./pwa
            target: api_platform_pwa_prod
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: google-github-actions/setup-gcloud@master
        with:
          # https://github.com/google-github-actions/setup-gcloud/issues/128
          version: '290.0.1'
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}
      - run: gcloud --quiet auth configure-docker
      - run: gcloud container clusters get-credentials $GKE_CLUSTER --zone $GCE_ZONE
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x
      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.context }}
          target: ${{ matrix.target }}
          pull: true
          push: false
          tags: ${{ env.CONTAINER_REGISTRY_BASE }}/${{ matrix.stage }}:dev
          cache-from: type=registry,ref=${{ env.CONTAINER_REGISTRY_BASE }}/${{ matrix.stage }}:latest
          cache-to: type=inline
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.CONTAINER_REGISTRY_BASE }}/${{ matrix.stage }}:dev
          format: table
          exit-code: 1
          ignore-unfixed: true
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        if: failure()
        with:
          image-ref: ${{ env.CONTAINER_REGISTRY_BASE }}/${{ matrix.stage }}:dev
          format: template
          template: '@/contrib/sarif.tpl'
          output: trivy-results.sarif
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        if: failure()
        with:
          sarif_file: trivy-results.sarif
