parameters:
    app.oidc.jwk: '{"kty": "EC","d": "cT3_vKHaGOAhhmzR0Jbi1ko40dNtpjtaiWzm_7VNwLA","use": "sig","crv": "P-256","x": "n6PnJPqNK5nP-ymwwsOIqZvjiCKFNzRyqWA8KNyBsDo","y": "bQSmMlDXOmtgyS1rhsKUmqlxq-8Kw0Iw9t50cSloTMM","alg": "ES256"}'
    app.oidc.aud: 'api-platform'

security:
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            stateless: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/profile, roles: IS_AUTHENTICATED_FULLY }

when@prod: &prod
    security:
        firewalls:
            main:
                access_token:
                    token_handler:
                        oidc_user_info:
                            claim: email
                            base_uri: '%env(OIDC_SERVER_URL_INTERNAL)%/protocol/openid-connect/userinfo'

when@dev: *prod

when@test:
    security:
        firewalls:
            main:
                access_token:
                    token_handler:
                        oidc:
                            claim: email
                            audience: '%app.oidc.aud%'
                            issuers: [ '%env(OIDC_SERVER_URL)%' ]
                            algorithm: 'ES256'
                            key: '%app.oidc.jwk%'
    services:
        # required by App\Security\OidcTokenGenerator
        app.security.jwk:
            parent: 'security.access_token_handler.oidc.jwk'
            arguments:
                $json: '%app.oidc.jwk%'
