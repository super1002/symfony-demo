language: php

dist: trusty
sudo: required

services:
  - docker

cache:
  yarn: true
  directories:
    - admin/node_modules
    - client/node_modules

env:
  global:
    - APP_ENV=prod
    - KUBERNETES_ENV=prod

before_install:
  - |
    if [ TRAVIS_BRANCH = "master" ] && [ $TRAVIS_REPO_SLUG = "api-platform/demo" ]; then
      curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get | bash -s -- --version v2.9.1;
    else
      KUBERNETES_ENV=staging;
      exit 0;
    fi

before_script:
  - sudo service mysql stop
  - sudo service postgresql stop
  - npm install -g react-scripts
  - while sudo lsof -Pi :5432 -sTCP:LISTEN -t; do sleep 1; done

script:
  - docker-compose up -d
  - helm lint api/helm/api/
  - sleep 20
  - docker-compose exec php composer install -o -n
  - docker-compose exec php bin/console security:check
  - docker-compose exec php bin/console doctrine:schema:validate --skip-sync
  - docker-compose exec php bin/console doctrine:schema:drop --force
  - docker-compose exec php bin/console doctrine:schema:create
  - docker-compose exec php bin/console hautelook:fixtures:load -n
  - docker-compose exec php bin/console doctrine:schema:drop --env=test --force
  - docker-compose exec php bin/console cache:warmup --env=test
  - docker-compose exec php bin/behat
  - curl http://localhost
  - curl http://localhost:81
  - curl http://localhost:8080
  - curl http://localhost:8081
  - curl -k https://localhost
  - curl -k https://localhost:444
  - curl -k https://localhost:8443
  - curl -k https://localhost:8444

# TODO: Keep looking to https://github.com/kubernetes/kubernetes/pull/64034 as it is in an experimental state in order to use "wait" with new implementation (to replace sleep 60).
after_success:
  - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
  - chmod +x ./kubectl
  - sudo mv ./kubectl /usr/local/bin/kubectl
  - echo -n ${TRAVIS_SERVICE_ACCOUNT_KEY} | base64 -d > travis-service-account.json
  - gcloud auth activate-service-account ${TRAVIS_SERVICE_ACCOUNT} --key-file travis-service-account.json --project=${PROJECT_NAME}
  - gcloud config set compute/zone europe-west1-c
  - gcloud config set project ${PROJECT_NAME}
  - gcloud container clusters get-credentials api-platform-demo --zone europe-west1-c --project ${PROJECT_NAME}
  - helm init --upgrade
  - kubectl delete namespace $(kubectl get namespaces -l app=api-demo -o jsonpath="{.items[0].metadata.name}" --ignore-not-found) --ignore-not-found
  - helm dependencies update ./api/helm/api
  - docker build --pull -t eu.gcr.io/${PROJECT_NAME}/php -t eu.gcr.io/${PROJECT_NAME}/php:latest api --target api_platform_php
  - docker build --pull -t eu.gcr.io/${PROJECT_NAME}/nginx -t eu.gcr.io/${PROJECT_NAME}/nginx:latest api --target api_platform_nginx
  - docker build --pull -t eu.gcr.io/${PROJECT_NAME}/varnish -t eu.gcr.io/${PROJECT_NAME}/varnish:latest api --target api_platform_varnish
  - gcloud docker -- push eu.gcr.io/${PROJECT_NAME}/php:latest
  - gcloud docker -- push eu.gcr.io/${PROJECT_NAME}/nginx:latest
  - gcloud docker -- push eu.gcr.io/${PROJECT_NAME}/varnish:latest
  - helm install --wait --namespace=${TRAVIS_COMMIT} ./api/helm/api --set php.repository=eu.gcr.io/${PROJECT_NAME}/php --set nginx.repository=eu.gcr.io/${PROJECT_NAME}/nginx --set varnish.repository=eu.gcr.io/${PROJECT_NAME}/varnish --set secret=${APP_SECRET} --set postgresUser=${DATABASE_USER},postgresPassword="${DATABASE_PASSWORD}",postgresDatabase=${DATABASE_NAME} --set postgresql.persistence.enabled=true --set corsAllowOrigin='*'
  - sleep 60
  - kubectl exec -it $(kubectl --namespace=${TRAVIS_COMMIT} get pods -l app=api-php -o jsonpath="{.items[0].metadata.name}") --namespace=${TRAVIS_COMMIT} -- ash -c 'export APP_ENV=dev && composer install -n && bin/console d:s:u --force --env=dev && bin/console hautelook:fixtures:load -n && APP_ENV=prod composer --no-dev install --classmap-authoritative && bin/console d:s:u --env=prod'
  - kubectl label namespace ${TRAVIS_COMMIT} app=api-demo
  - cd admin && REACT_APP_API_ENTRYPOINT=http://demo-admin.api-platform.com yarn build --environment=prod
  - gsutil mb -l europe-west1 -p api-platform-demo gs://demo-admin.api-platform.com
  - cd admin && gsutil cp -R build/* gs://demo-admin.api-platform.com/build
  - gsutil iam ch allUsers:objectViewer gs://demo-admin.api-platform.com
  - gsutil web set -m index.html gs://demo-admin.api-platform.com
  - gcloud auth revoke ${TRAVIS_SERVICE_ACCOUNT}
